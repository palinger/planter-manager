[{"/Users/pavel.hincek/WebstormProjects/planter-manager/src/App.tsx":"1","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/PlantCycle/index.tsx":"2","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/PlantEvent/index.tsx":"3","/Users/pavel.hincek/WebstormProjects/planter-manager/src/index.tsx":"4","/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/context.tsx":"5","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/Timeline/index.tsx":"6","/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/plantData.ts":"7","/Users/pavel.hincek/WebstormProjects/planter-manager/src/reportWebVitals.ts":"8","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/index.tsx":"9","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/SoakInformation.tsx":"10","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/GeneralInformation.tsx":"11","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/GermInformation.tsx":"12","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/GrowInformation.tsx":"13","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/DayInformation.tsx":"14","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/Legend/index.tsx":"15","/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/liveContext.tsx":"16","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/Live/index.tsx":"17","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/LiveUnit/index.tsx":"18","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/LiveUnitRow/index.tsx":"19","/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/interface.ts":"20"},{"size":496,"mtime":1611263763000,"results":"21","hashOfConfig":"22"},{"size":3147,"mtime":1610377092000,"results":"23","hashOfConfig":"22"},{"size":1341,"mtime":1610315429000,"results":"24","hashOfConfig":"22"},{"size":500,"mtime":1609362135000,"results":"25","hashOfConfig":"22"},{"size":1869,"mtime":1611176917000,"results":"26","hashOfConfig":"22"},{"size":4170,"mtime":1611252015000,"results":"27","hashOfConfig":"22"},{"size":4627,"mtime":1611242390000,"results":"28","hashOfConfig":"22"},{"size":425,"mtime":1609354663000,"results":"29","hashOfConfig":"22"},{"size":2445,"mtime":1611161978000,"results":"30","hashOfConfig":"22"},{"size":406,"mtime":1610310584000,"results":"31","hashOfConfig":"22"},{"size":925,"mtime":1611161612000,"results":"32","hashOfConfig":"22"},{"size":420,"mtime":1610310593000,"results":"33","hashOfConfig":"22"},{"size":909,"mtime":1610310656000,"results":"34","hashOfConfig":"22"},{"size":334,"mtime":1610311036000,"results":"35","hashOfConfig":"22"},{"size":1223,"mtime":1610387787000,"results":"36","hashOfConfig":"22"},{"size":2739,"mtime":1611262176000,"results":"37","hashOfConfig":"22"},{"size":2335,"mtime":1611263640000,"results":"38","hashOfConfig":"22"},{"size":828,"mtime":1611264184000,"results":"39","hashOfConfig":"22"},{"size":1373,"mtime":1611262439000,"results":"40","hashOfConfig":"22"},{"size":852,"mtime":1610210342000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gbuthj",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pavel.hincek/WebstormProjects/planter-manager/src/App.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/PlantCycle/index.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/PlantEvent/index.tsx",[],["88","89"],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/index.tsx",[],["90","91"],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/context.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/Timeline/index.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/plantData.ts",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/reportWebVitals.ts",[],["92","93"],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/index.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/SoakInformation.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/GeneralInformation.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/GermInformation.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/GrowInformation.tsx",[],["94","95"],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/DayInformation.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/Legend/index.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/liveContext.tsx",["96","97"],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/Live/index.tsx",["98","99"],"import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport EcoIcon from \"@material-ui/icons/Eco\";\nimport LiveUnit from \"../LiveUnit\";\nimport LiveUnitRow from \"../LiveUnitRow\";\nimport { options, nameMap } from \"../../providers/plantData\";\nimport {  PlantData } from \"../../providers/interface\";\nimport { useLiveContext } from \"../../providers/liveContext\";\n\nconst Live = () => {\n  const [selected, setSelected] = useState<string[]>([]);\n  const [date, setDate] = useState(\"\");\n  const { state, dispatch, ACTIONS }: any = useLiveContext();\n\n  const submitSelection = () => {\n    console.log(\"submit\");\n  };\n\n  const onDateChange = (e: any) => {\n    setDate(e.target.value);\n\n    dispatch({\n      type: ACTIONS.SET_DATE,\n      payload: e.target.value,\n    });\n  };\n\n  const onPlantChangeHandler = (selection: any) => {\n    let sel = selection?.map((item: any) => item.value);\n    setSelected(sel);\n  };\n\n  return (\n    <div className=\"liveContainer\">\n      <div className=\"liveFormWrapper\">\n        <h3>Plant Selection</h3>\n        <div className=\"liveControl\">\n          <div className=\"liveControlItem\">\n            <label>\n              Planting Date:\n              <input\n                onChange={(e) => {\n                  onDateChange(e);\n                }}\n                type=\"date\"\n                value={date}\n              />\n            </label>\n          </div>\n          <div className=\"liveControlItem\">\n            <Select\n              onChange={(selection: any) => onPlantChangeHandler(selection)}\n              isMulti\n              options={options}\n            />\n          </div>\n        </div>\n        {selected.map((item, index) => (\n          <LiveUnitRow key={index} id={item} date={date} />\n        ))}\n        <div className=\"submitSelection\">\n          <button onClick={submitSelection}>\n            <EcoIcon /> Plant selected\n          </button>\n        </div>\n      </div>\n      <div className=\"liveWrapper\">\n      {new Array(state.total).fill(1).map((unit, index) => (\n          <LiveUnit key={index} id=\"peas\" plantName=\"Hrasak\"/>\n        ))}\n        {/* {state.trayContent.map((unit: PlantData, index: number) => (\n          item.\n          <LiveUnit key={index} id={unit.id} plantName={nameMap[unit.id]} />\n        ))} */}\n      </div>\n    </div>\n  );\n};\n\nexport default Live;\n","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/LiveUnit/index.tsx",["100","101"],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/LiveUnitRow/index.tsx",["102","103","104","105","106"],"import React, { useEffect, useState } from \"react\";\nimport { plantData, nameMap } from \"../../providers/plantData\";\nimport { PlantData } from \"../../providers/interface\";\n// import DayIcon from \"@material-ui/icons/Today\";\nimport moment from \"moment\";\nimport { useLiveContext, LiveUnit } from \"../../providers/liveContext\";\n\ninterface LiveUnitRowProps {\n  date: string;\n  id: string;\n}\n\nconst LiveUnitRow = ({ id, date }: LiveUnitRowProps) => {\n  const { dispatch, ACTIONS }: any = useLiveContext();\n\n  const calculateDates = (dateString: string, days: number) => {\n    let d = moment(new Date(dateString));\n    let dm = d.add(days, \"days\");\n    return dm.format(\"dd DD. MM.\");\n  };\n\n  let growDays: number = 0;\n\n  plantData.map((item) => {\n    if (item.id === id) {\n      growDays = item.cycleData.grow.length;\n    }\n  });\n\n  const updateSelection = (e: any) => {\n    dispatch({\n      type: ACTIONS.PLANTING,\n      payload: {\n        id: id,\n        number: parseInt(e.target.value, 10),\n        date: {\n          plantingDate: calculateDates(date, 0), // just to format\n          harvestDate: calculateDates(date, growDays),\n        },\n      },\n    });\n  };\n\n  return (\n    <div className=\"plantRow\">\n      <label htmlFor={id}>{nameMap[id]}</label>\n      <input id={id} onChange={(e) => updateSelection(e)} type=\"number\" />\n    </div>\n  );\n};\n\nexport default LiveUnitRow;\n","/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/interface.ts",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"107","replacedBy":"113"},{"ruleId":"109","replacedBy":"114"},{"ruleId":"107","replacedBy":"115"},{"ruleId":"109","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":19},{"ruleId":"117","severity":1,"message":"122","line":6,"column":19,"nodeType":"119","messageId":"120","endLine":6,"endColumn":26},{"ruleId":"117","severity":1,"message":"123","line":7,"column":11,"nodeType":"119","messageId":"120","endLine":7,"endColumn":20},{"ruleId":"117","severity":1,"message":"124","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":17},{"ruleId":"117","severity":1,"message":"125","line":14,"column":9,"nodeType":"119","messageId":"120","endLine":14,"endColumn":23},{"ruleId":"117","severity":1,"message":"126","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"127","line":1,"column":28,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"123","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":19},{"ruleId":"117","severity":1,"message":"128","line":6,"column":26,"nodeType":"119","messageId":"120","endLine":6,"endColumn":34},{"ruleId":"129","severity":1,"message":"130","line":24,"column":24,"nodeType":"131","messageId":"132","endLine":24,"endColumn":26},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],["133"],["134"],["133"],["134"],"@typescript-eslint/no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","'plantData' is defined but never used.","'nameMap' is defined but never used.","'PlantData' is defined but never used.","'TodayIcon' is defined but never used.","'getMoreOnEvent' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'LiveUnit' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]