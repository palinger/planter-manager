[{"/Users/pavel.hincek/WebstormProjects/planter-manager/src/App.tsx":"1","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/PlantCycle/index.tsx":"2","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/PlantEvent/index.tsx":"3","/Users/pavel.hincek/WebstormProjects/planter-manager/src/index.tsx":"4","/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/context.tsx":"5","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/Timeline/index.tsx":"6","/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/plantData.ts":"7","/Users/pavel.hincek/WebstormProjects/planter-manager/src/reportWebVitals.ts":"8","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/index.tsx":"9","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/SoakInformation.tsx":"10","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/GeneralInformation.tsx":"11","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/GermInformation.tsx":"12","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/GrowInformation.tsx":"13","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/DayInformation.tsx":"14","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/Legend/index.tsx":"15","/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/liveContext.tsx":"16","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/Live/index.tsx":"17","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/LiveUnit/index.tsx":"18","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/LiveUnitRow/index.tsx":"19"},{"size":504,"mtime":1611183745000,"results":"20","hashOfConfig":"21"},{"size":3147,"mtime":1610377092000,"results":"22","hashOfConfig":"21"},{"size":1341,"mtime":1610315429000,"results":"23","hashOfConfig":"21"},{"size":500,"mtime":1609362135000,"results":"24","hashOfConfig":"21"},{"size":1869,"mtime":1611176917000,"results":"25","hashOfConfig":"21"},{"size":4170,"mtime":1611161513000,"results":"26","hashOfConfig":"21"},{"size":4376,"mtime":1611161213000,"results":"27","hashOfConfig":"21"},{"size":425,"mtime":1609354663000,"results":"28","hashOfConfig":"21"},{"size":2445,"mtime":1611161978000,"results":"29","hashOfConfig":"21"},{"size":406,"mtime":1610310584000,"results":"30","hashOfConfig":"21"},{"size":925,"mtime":1611161612000,"results":"31","hashOfConfig":"21"},{"size":420,"mtime":1610310593000,"results":"32","hashOfConfig":"21"},{"size":909,"mtime":1610310656000,"results":"33","hashOfConfig":"21"},{"size":334,"mtime":1610311036000,"results":"34","hashOfConfig":"21"},{"size":1223,"mtime":1610387787000,"results":"35","hashOfConfig":"21"},{"size":2605,"mtime":1611183616000,"results":"36","hashOfConfig":"21"},{"size":1354,"mtime":1611176690000,"results":"37","hashOfConfig":"21"},{"size":923,"mtime":1611147190000,"results":"38","hashOfConfig":"21"},{"size":1637,"mtime":1611183726000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"1gbuthj",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pavel.hincek/WebstormProjects/planter-manager/src/App.tsx",["86","87"],"import React from \"react\";\nimport Live from \"./components/Live\";\nimport Timeline from \"./components/Timeline\";\nimport { AppContextProvider } from \"./providers/context\";\nimport { LiveContextProvider } from \"./providers/liveContext\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <LiveContextProvider>\n        <Live />\n      </LiveContextProvider> */}\n      <AppContextProvider>\n        <Timeline />\n      </AppContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/PlantCycle/index.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/PlantEvent/index.tsx",[],["88","89"],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/index.tsx",[],["90","91"],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/context.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/Timeline/index.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/plantData.ts",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/reportWebVitals.ts",[],["92","93"],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/index.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/SoakInformation.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/GeneralInformation.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/GermInformation.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/GrowInformation.tsx",[],["94","95"],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/ModalContent/DayInformation.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/Legend/index.tsx",[],"/Users/pavel.hincek/WebstormProjects/planter-manager/src/providers/liveContext.tsx",["96","97"],"import React, { useContext, useReducer } from \"react\";\n\nexport type LiveDate = {\n  plantingDate: string;\n  harvestDate: string;\n};\n\nexport type ModalSelection = {\n  id: string;\n  date: LiveDate;\n};\n\nexport type LiveUnit = {\n  id: string;\n  date: LiveDate;\n  amount: number;\n};\n\nexport type State = {\n  trayContent: LiveUnit[];\n  harvestDate: string;\n  modalSelection: ModalSelection;\n  modalState: boolean;\n};\n\nconst initialState: State = {\n  trayContent: [\n    {\n      id: \"radish\",\n      date: {\n        plantingDate: \"2021-01-01\",\n        harvestDate: \"2021-01-01\",\n      },\n      amount: 0,\n    },\n    {\n      id: \"peas\",\n      date: {\n        plantingDate: \"2021-01-01\",\n        harvestDate: \"2021-01-01\",\n      },\n      amount: 0,\n    },\n  ],\n  harvestDate: \"2021-01-01\",\n  modalSelection: {\n    id: \"\",\n    date: {\n      harvestDate: \"\",\n      plantingDate: \"\",\n    },\n  },\n  modalState: false,\n};\n\nconst Context = React.createContext([\n  initialState,\n  ({ type, payload }: any) => {\n    // do nohting.\n  },\n]);\n\nconst ACTIONS = {\n  PLANTING: \"PLANTING\",\n  CLEAR_TRAY: \"CLEAR_TRAY\",\n\n  SELECTED_MODAL_EVENT: \"SELECTED_MODAL_EVENT\",\n  SET_MODAL_STATE: \"SET_MODAL_STATE\",\n};\n\nexport const reducer = (state: State, { type, payload }: any) => {\n  switch (type) {\n    case \"PLANTING\":\n      console.log(\"payload: \", payload);\n      const isAlready = (element: LiveUnit) => element.id === payload.id;\n      \n      console.log(\"'some' check: \",state.trayContent.some(isAlready));\n\n      const newItem = {\n        id: payload.id,\n        date: {\n          plantingDate: \"2021-01-01\",\n          harvestDate: \"2021-01-01\",\n        },\n        amount: payload.number,\n      };\n\n      let updated = state.trayContent.map((item) => {\n        if (item.id === payload.id) {\n          item.amount = parseInt(payload.number, 10);\n        } else return item;\n      });\n\n      console.log(\"updated: \", updated);\n\n      return { ...state, trayContent: updated };\n\n    case \"CLEAR_TRAY\":\n      return { ...state, trayContent: payload };\n\n    case \"SELECTED_MODAL_EVENT\":\n      return { ...state, modalSelection: payload };\n\n    case \"SET_MODAL_STATE\":\n      return { ...state, modalState: payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const LiveContextProvider = (props: any) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <Context.Provider value={[state, dispatch]}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nexport const useLiveContext = () => {\n  const [state, dispatch] = useContext(Context);\n\n  return {\n    state,\n    dispatch,\n    ACTIONS,\n  };\n};\n","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/Live/index.tsx",["98","99","100","101","102"],"import React, { useState, useRef } from \"react\";\nimport EcoIcon from \"@material-ui/icons/Eco\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport LiveUnit from \"../LiveUnit\";\nimport LiveUnitRow from \"../LiveUnitRow\";\nimport { plantData } from \"../../providers/plantData\";\nimport { useLiveContext } from \"../../providers/liveContext\";\n\nconst Live = () => {\n  const [numberSelected, setNumberSelected] = useState(1);\n  const { state, dispatch, ACTIONS }: any = useLiveContext();\n\n  const addNewRow = () => {\n    setNumberSelected(numberSelected + 1);\n  };\n\n  const submitSelection = () => {\n    setNumberSelected(0);\n  };\n\n\n  return (\n    <div className=\"liveContainer\">\n      <div className=\"liveFormWrapper\">\n        <h3>Plant Selection</h3>\n        {new Array(numberSelected).fill(1).map((index) => (\n          <LiveUnitRow key={index} />\n        ))}\n\n        <div className=\"addNewRow\">\n          <button onClick={addNewRow}>\n            <AddIcon />\n          </button>\n        </div>\n        <div className=\"submitSelection\">\n          <button onClick={submitSelection}>\n            <EcoIcon /> Plant selected\n          </button>\n        </div>\n      </div>\n      <div className=\"liveWrapper\">\n        {new Array(60).fill(1).map((unit, index) => (\n          <LiveUnit key={index} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Live;\n","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/LiveUnit/index.tsx",["103","104","105"],"import React from \"react\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useLiveContext } from \"../../providers/liveContext\";\n\n// interface LiveProps {\n//   length: number;\n//   plantName: string;\n//   calculatedDate: string;\n//   id: string;\n//   type: \"soak\" | \"germination\" | \"grow\";\n//   isFirst: boolean;\n// }\n\nconst LiveUnit = () => {\n  const { dispatch, ACTIONS }: any = useLiveContext();\n\n  const getMoreOnEvent = (e: any, eventId: string, eventType: string) => {\n    dispatch({\n      type: ACTIONS.SELECTED_MODAL_EVENT,\n      payload: {\n        type: eventType,\n        id: eventId,\n        date: \"calculatedDate\",\n      },\n    });\n    dispatch({\n      type: ACTIONS.SET_MODAL_STATE,\n      payload: true,\n    });\n  };\n\n  return (\n    <div className=\"liveUnit\">\n      <span className=\"type\">hello</span>\n    </div>\n  );\n};\n\nexport default LiveUnit;\n","/Users/pavel.hincek/WebstormProjects/planter-manager/src/components/LiveUnitRow/index.tsx",["106"],{"ruleId":"107","severity":1,"message":"108","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":12},{"ruleId":"107","severity":1,"message":"111","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":29},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"112","replacedBy":"116"},{"ruleId":"114","replacedBy":"117"},{"ruleId":"112","replacedBy":"118"},{"ruleId":"114","replacedBy":"119"},{"ruleId":"112","replacedBy":"120"},{"ruleId":"114","replacedBy":"121"},{"ruleId":"107","severity":1,"message":"122","line":79,"column":13,"nodeType":"109","messageId":"110","endLine":79,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":88,"column":50,"nodeType":"125","messageId":"126","endLine":88,"endColumn":52},{"ruleId":"107","severity":1,"message":"127","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":33},{"ruleId":"107","severity":1,"message":"128","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":19},{"ruleId":"107","severity":1,"message":"129","line":11,"column":11,"nodeType":"109","messageId":"110","endLine":11,"endColumn":16},{"ruleId":"107","severity":1,"message":"130","line":11,"column":18,"nodeType":"109","messageId":"110","endLine":11,"endColumn":26},{"ruleId":"107","severity":1,"message":"131","line":11,"column":28,"nodeType":"109","messageId":"110","endLine":11,"endColumn":35},{"ruleId":"107","severity":1,"message":"132","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":17},{"ruleId":"107","severity":1,"message":"133","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":16},{"ruleId":"107","severity":1,"message":"134","line":18,"column":9,"nodeType":"109","messageId":"110","endLine":18,"endColumn":23},{"ruleId":"107","severity":1,"message":"135","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":15},"@typescript-eslint/no-unused-vars","'Live' is defined but never used.","Identifier","unusedVar","'LiveContextProvider' is defined but never used.","no-native-reassign",["136"],"no-negated-in-lhs",["137"],["136"],["137"],["136"],["137"],["136"],["137"],"'newItem' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useRef' is defined but never used.","'plantData' is defined but never used.","'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'ACTIONS' is assigned a value but never used.","'TodayIcon' is defined but never used.","'MoreIcon' is defined but never used.","'getMoreOnEvent' is assigned a value but never used.","'DayIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]