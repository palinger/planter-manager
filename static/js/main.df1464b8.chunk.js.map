{"version":3,"sources":["providers/context.tsx","providers/plantData.ts","components/PlantEvent/index.tsx","components/PlantCycle/index.tsx","components/ModalContent/SoakInformation.tsx","components/ModalContent/GeneralInformation.tsx","components/ModalContent/GermInformation.tsx","components/ModalContent/GrowInformation.tsx","components/ModalContent/DayInformation.tsx","components/ModalContent/index.tsx","components/Timeline/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","selection","harvestDate","modalSelection","id","type","date","modalState","Context","React","createContext","payload","ACTIONS","SET_DATE","UPDATE_SELECTION","ALL_SELECTION","CLEAR_SELECTION","SELECTED_MODAL_EVENT","SET_MODAL_STATE","reducer","state","ContextProvider","props","useReducer","dispatch","Provider","value","children","useAppContext","useContext","plantData","plantName","clean","time","solution","planting","seedWeight","unit","cycleData","soak","length","temp","germination","grow","lightCycle","waterCycle","ph","options","label","PlantEvent","isFirstEvent","eventId","calculatedDate","isFirst","className","onClick","e","eventType","getMoreOnEvent","PlantCycle","totalGrowDays","cycles","calculateDates","days","moment","Date","subtract","format","map","item","index","Array","fill","loopItem","push","SoakInformation","plantObject","GeneralInformation","GermInformation","GrowInformation","DayInformation","ModalContent","variants","selectedPlant","filter","hasSoak","hasGermination","Timeline","htmlFor","onChange","target","onDateChangeHandler","onPlantChangeHandler","isMulti","console","log","ariaHideApp","isOpen","contentLabel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df1464b8.chunk.js","sourcesContent":["import React, { useContext, useReducer } from \"react\";\n\nexport type ModalSelection = {\n  id: string;\n  type: string;\n  date: string;\n};\n\nexport type State = {\n  selection: string[];\n  harvestDate: string;\n  modalSelection: ModalSelection;\n  modalState: boolean;\n};\n\nconst initialState: State = {\n  selection: [],\n  harvestDate: \"2021-01-01\",\n  modalSelection: {\n    id: \"\",\n    type: \"\",\n    date: \"\",\n  },\n  modalState: false,\n};\n\nconst Context = React.createContext([\n  initialState,\n  ({ type, payload }: any) => {\n    // do nohting.\n  },\n]);\n\nconst ACTIONS = {\n  SET_DATE: \"SET_DATE\",\n  // CLEAR_DATE: \"CLEAR_DATE\",\n  \n  UPDATE_SELECTION: \"UPDATE_SELECTION\",\n  ALL_SELECTION: \"ALL_SELECTION\",\n  CLEAR_SELECTION: \"CLEAR_SELECTION\",\n\n  SELECTED_MODAL_EVENT: \"SELECTED_MODAL_EVENT\",\n  SET_MODAL_STATE: \"SET_MODAL_STATE\",\n};\n\nexport const reducer = (state: State, { type, payload }: any) => {\n  switch (type) {\n    case \"UPDATE_SELECTION\":\n      return { ...state, selection: payload };\n\n    case \"CLEAR_SELECTION\":\n      return { ...state, selection: payload };\n\n    case \"ALL_SELECTION\":\n      return { ...state, selection: payload };\n\n    // case \"CLEAR_DATE\":\n    //   return { ...state, harvestDate: \"payload\" };\n\n    case \"SET_DATE\":\n      return { ...state, harvestDate: payload };\n\n    case \"SELECTED_MODAL_EVENT\":\n      return { ...state, modalSelection: payload };\n\n    case \"SET_MODAL_STATE\":\n      return { ...state, modalState: payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const ContextProvider = (props: any) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <Context.Provider value={[state, dispatch]}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nexport const useAppContext = () => {\n  const [state, dispatch] = useContext(Context);\n\n  return {\n    state,\n    dispatch,\n    ACTIONS,\n  };\n};\n","import { PlantData, Options } from \"./interface\";\nexport const plants = [\"leak\", \"peas\", \"redCabbage\", \"brocolli\", \"pakchoi\", \"radish\", \"borax\"];\nexport const plantData: PlantData[] = [\n  {\n    id: \"leak\",\n    plantName: \"Porik\",\n    clean: {\n      time: \"15 min\",\n      solution: \"3%\",\n    },\n    planting: {\n      seedWeight: 4.5,\n      unit: \"kelimok\",\n    },\n    cycleData: {\n      soak: {\n        length: 0,\n        time: \"30 mins\",\n        temp: \"20 C\",\n      },\n      germination: {\n        length: 1,\n        time: \"24 hours\",\n        temp: \"20 C\",\n      },\n      grow: {\n        length: 6,\n        lightCycle: \"regular\",\n        waterCycle: \"regular\",\n        ph: 6.6,\n        temp: \"20 C\",\n      },\n    },\n  },\n  {\n    id: \"peas\",\n    plantName: \"Hrasok\",\n    clean: {\n      time: \"15min\",\n      solution: \"3%\",\n    },\n    planting: {\n      seedWeight: 5.5,\n      unit: \"kelimok\",\n    },\n    cycleData: {\n      soak: {\n        length: 2,\n        time: \"48 hours\",\n        temp: \"22 C\",\n      },\n      germination: {\n        length: 0,\n        time: \"1 hour\",\n        temp: \"22 C\",\n      },\n      grow: {\n        length: 10,\n        lightCycle: \"regular\",\n        waterCycle: \"regular\",\n        ph: 6.6,\n        temp: \"22 C\",\n      },\n    },\n  },\n  {\n    id: \"redCabbage\",\n    plantName: \"Red Cabbage\",\n    clean: {\n      time: \"15 min\",\n      solution: \"3%\",\n    },\n    planting: {\n      seedWeight: 5.5,\n      unit: \"kelimok\",\n    },\n    cycleData: {\n      soak: {\n        length: 1,\n        time: \"30 min\",\n        temp: \"20 C\",\n      },\n      germination: {\n        length: 1,\n        time: \"24 hours\",\n        temp: \"20 C\",\n      },\n      grow: {\n        length: 8,\n        lightCycle: \"regular\",\n        waterCycle: \"regular\",\n        ph: 6.6,\n        temp: \"20 C\",\n      },\n    },\n  },\n  {\n    id: \"brocolli\",\n    plantName: \"Brokolica\",\n    clean: {\n      time: \"15 min\",\n      solution: \"3%\",\n    },\n    planting: {\n      seedWeight: 2.5,\n      unit: \"kelimok\",\n    },\n    cycleData: {\n      soak: {\n        length: 0,\n        time: \"15 min\",\n        temp: \"20 C\",\n      },\n      germination: {\n        length: 0,\n        time: \"30 min\",\n        temp: \"20 C\",\n      },\n      grow: {\n        length: 4,\n        lightCycle: \"regular\",\n        waterCycle: \"regular\",\n        ph: 6.6,\n        temp: \"20 C\",\n      },\n    },\n  },\n  {\n    id: \"pakchoi\",\n    plantName: \"Pak Choi\",\n    clean: {\n      time: \"15 min\",\n      solution: \"3%\",\n    },\n    planting: {\n      seedWeight: 2.5,\n      unit: \"kelimok\",\n    },\n    cycleData: {\n      soak: {\n        length: 0,\n        time: \"15 min\",\n        temp: \"20 C\",\n      },\n      germination: {\n        length: 1,\n        time: \"24 hours\",\n        temp: \"20 C\",\n      },\n      grow: {\n        length: 8,\n        lightCycle: \"regular\",\n        waterCycle: \"regular\",\n        ph: 6.6,\n        temp: \"20 C\",\n      },\n    },\n  },\n  {\n    id: \"radish\",\n    plantName: \"Radish\",\n    clean: {\n      time: \"15 min\",\n      solution: \"3%\",\n    },\n    planting: {\n      seedWeight: 4.5,\n      unit: \"kelimok\",\n    },\n    cycleData: {\n      soak: {\n        length: 0,\n        time: \"15 min\",\n        temp: \"20 C\",\n      },\n      germination: {\n        length: 2,\n        time: \"48 hours\",\n        temp: \"20 C\",\n      },\n      grow: {\n        length: 4,\n        lightCycle: \"regular\",\n        waterCycle: \"regular\",\n        ph: 6.6,\n        temp: \"20 C\",\n      },\n    },\n  },\n  {\n    id: \"borax\",\n    plantName: \"Borax\",\n    clean: {\n      time: \"15 min\",\n      solution: \"3%\",\n    },\n    planting: {\n      seedWeight: 2.5,\n      unit: \"kelimok\",\n    },\n    cycleData: {\n      soak: {\n        length: 0,\n        time: \"15 min\",\n        temp: \"20 C\",\n      },\n      germination: {\n        length: 1,\n        time: \"24 hours\",\n        temp: \"20 C\",\n      },\n      grow: {\n        length: 4,\n        lightCycle: \"regular\",\n        waterCycle: \"regular\",\n        ph: 6.6,\n        temp: \"20 C\",\n      },\n    },\n  },\n];\n\nexport const options: Options[] = [\n  {\n    label: \"hrasok\",\n    value: \"peas\",\n  },\n  {\n    label: \"Porik\",\n    value: \"leak\",\n  },\n  {\n    label: \"Cervena kapusta\",\n    value: \"redCabbage\",\n  },\n  {\n    label: \"Brocolica\",\n    value: \"brocolli\",\n  },\n  {\n    label: \"Pak Choi\",\n    value: \"pakchoi\",\n  },\n  {\n    label: \"Radish\",\n    value: \"radish\",\n  },\n  {\n    label: \"Borax\",\n    value: \"borax\",\n  },\n];\n","import React from \"react\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useAppContext } from \"../../providers/context\";\n\ninterface PlantEventProps {\n  length: number;\n  plantName: string;\n  calculatedDate: string;\n  id: string;\n  type: \"soak\" | \"germination\" | \"grow\";\n  isFirst: boolean;\n}\n\nconst PlantEvent = ({\n  plantName,\n  length,\n  type,\n  calculatedDate,\n  id,\n  isFirst,\n}: PlantEventProps) => {\n  const { dispatch, ACTIONS }: any = useAppContext();\n  \n  const getMoreOnEvent = (e: any, eventId: string, eventType: string) => {\n    dispatch({\n      type: ACTIONS.SELECTED_MODAL_EVENT,\n      payload: {\n        type: eventType,\n        id: eventId,\n        date: calculatedDate\n      }\n    })\n    dispatch({\n      type: ACTIONS.SET_MODAL_STATE,\n      payload: true\n    })\n  };\n\n  const renderIcon = (isFirstEvent: boolean, eventId: string, eventType: string) => {\n    if (isFirstEvent) {\n      return <TodayIcon onClick={(e) => getMoreOnEvent(e, eventId, type)} className=\"iconEvent\"  />;\n    } else return <MoreIcon />;\n  };\n\n  return (\n    <div className=\"plantEventContainer\">\n      <div className=\"plantEvent\">\n        <span className={type} >\n          {renderIcon(isFirst, id, type)}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default PlantEvent;\n","import React from \"react\";\nimport PlantEvent from \"../PlantEvent\";\nimport { plantData } from \"../../providers/plantData\";\nimport moment from \"moment\";\n\ninterface PlantCycleProps {\n  id: string;\n  harvestDate: string;\n}\n\nconst PlantCycle = ({ id, harvestDate }: PlantCycleProps) => {\n  let totalGrowDays: number = 0;\n  let cycles: any = [];\n\n  const calculateDates = (date: any, days: number) => {\n    let d = moment(new Date(date));\n    let dm = d.subtract(days - 1, \"days\");\n    return dm.format(\"ddd, MMM Do YYYY\");\n  };\n\n  plantData.map((item) => {\n    if (item.id === id) {\n      return (totalGrowDays =\n        item.cycleData.soak.length +\n        item.cycleData.germination.length +\n        item.cycleData.grow.length);\n    }\n    return null;\n  });\n\n  plantData.map((item, index) => {\n    if (item.id === id) {\n      new Array(item.cycleData.soak.length)\n        .fill(0)\n        .map((loopItem, index: number) => {\n          return cycles.push(\n            <PlantEvent\n              key={index}\n              plantName={item.plantName}\n              calculatedDate={\n                index === 0 ? calculateDates(harvestDate, totalGrowDays) : \"\"\n              }\n              id={item.id}\n              type=\"soak\"\n              length={item.cycleData.soak.length}\n              isFirst={index === 0 ? true : false}\n            />\n          );\n        });\n\n      new Array(item.cycleData.germination.length)\n        .fill(0)\n        .map((loopItem, index: number) => {\n          return cycles.push(\n            <PlantEvent\n              key={index + 50}\n              plantName={item.plantName}\n              calculatedDate={\n                index === 0\n                  ? calculateDates(\n                      harvestDate,\n                      totalGrowDays - item.cycleData.soak.length\n                    )\n                  : \"\"\n              }\n              id={item.id}\n              type=\"germination\"\n              length={item.cycleData.germination.length}\n              isFirst={index === 0 ? true : false}\n            />\n          );\n        });\n\n      new Array(item.cycleData.grow.length)\n        .fill(0)\n        .map((loopItem, index: number) => {\n          return cycles.push(\n            <PlantEvent\n              key={index + 100}\n              plantName={item.plantName}\n              calculatedDate={\n                index === 0\n                  ? calculateDates(\n                      harvestDate,\n                      totalGrowDays -\n                        item.cycleData.soak.length -\n                        item.cycleData.germination.length\n                    )\n                  : \"\"\n              }\n              id={item.id}\n              type=\"grow\"\n              length={item.cycleData.grow.length}\n              isFirst={index === 0 ? true : false}\n            />\n          );\n        });\n      return null;\n    } else return null;\n  });\n\n  return (\n    <div className=\"plantCycle\">\n      <h3>{id}</h3>\n      {cycles}\n    </div>\n  );\n};\n\nexport default PlantCycle;\n","import React from \"react\";\nimport ClockIcon from \"@material-ui/icons/Timer\";\nimport { ContentProps } from \"../../providers/interface\";\n\nconst SoakInformation = ({ plantObject }: ContentProps) => {\n  return (\n    <div className=\"soakInformation modalBox\">\n      <h3>Soak</h3>\n      <p><ClockIcon /> Time: {plantObject.cycleData.soak.time}</p>\n      <hr/>\n    </div>\n  );\n};\n\nexport default SoakInformation;\n","import React from \"react\";\nimport { ContentProps } from \"../../providers/interface\";\nimport SolutionIcon from \"@material-ui/icons/FormatColorFill\";\nimport ClockIcon from \"@material-ui/icons/Timer\";\nimport WeightIcon from \"@material-ui/icons/FitnessCenter\";\nimport PerIcon from \"@material-ui/icons/Widgets\";\n\nconst GeneralInformation = ({ plantObject }: ContentProps) => {\n  return (\n    <div className=\"generalInformation  modalBox\">\n        <h3>Cleaning</h3>\n        <p>\n          <ClockIcon /> Time: {plantObject.clean.time}\n        </p>\n        <p>\n          <SolutionIcon /> Solution: {plantObject.clean.solution}\n        </p>\n        <hr />\n        <h3>Planting </h3>\n        <p>\n          <WeightIcon /> Seed weight: {plantObject.planting.seedWeight}\n        </p>\n        <p>\n          <PerIcon /> Unit: {plantObject.planting.unit}\n        </p>\n        <hr />\n      </div>\n\n  );\n};\n\nexport default GeneralInformation;\n","import React from \"react\";\nimport ClockIcon from \"@material-ui/icons/Timer\";\nimport { ContentProps } from \"../../providers/interface\";\n\nconst GermInformation = ({ plantObject }: ContentProps) => {\n  return (\n    <div className=\"germInformation modalBox\">\n      <h3>Germination</h3>\n      <p><ClockIcon /> Time: {plantObject.cycleData.germination.time}</p>\n      <hr/>\n    </div>\n  );\n};\n\nexport default GermInformation;\n","import React from \"react\";\nimport { ContentProps } from \"../../providers/interface\";\nimport TempIcon from \"@material-ui/icons/WbSunny\";\nimport PHIcon from \"@material-ui/icons/Opacity\";\nimport WaterIcon from \"@material-ui/icons/Waves\";\nimport LightsIcon from \"@material-ui/icons/WbIncandescent\";\nimport ClockIcon from \"@material-ui/icons/Timer\";\n\nconst GrowInformation = ({ plantObject }: ContentProps) => {\n  return (\n    <div className=\"growInformation modalBox\">\n      <h3>Grow</h3>\n      <p><ClockIcon /> Time: {plantObject.cycleData.grow.length} days</p>\n      <p><TempIcon /> Temperature: {plantObject.cycleData.grow.temp}</p>\n      <p><PHIcon /> Water Ph: {plantObject.cycleData.grow.ph}</p>\n      <p><LightsIcon /> LightCycle: {plantObject.cycleData.grow.lightCycle}</p>\n      <p><WaterIcon /> WaterCycle: {plantObject.cycleData.grow.waterCycle}</p>\n    </div>\n  );\n};\n\nexport default GrowInformation;\n","import React from \"react\";\nimport DayIcon from \"@material-ui/icons/Today\";\n\ninterface DayInformationProps { \n  date: string\n}\n\nconst DayInformation = ({ date }: DayInformationProps) => {\n  return (\n    <div className=\"dayInformation modalBox\">\n      <p><DayIcon /> <b>{date}</b></p>\n    </div>\n  );\n};\n\nexport default DayInformation;\n","import React from \"react\";\nimport { ModalSelection } from \"../../providers/context\";\nimport SoakInformation from \"./SoakInformation\";\nimport GeneralInformation from \"./GeneralInformation\";\nimport GermInformation from \"./GermInformation\";\nimport GrowInformation from \"./GrowInformation\";\nimport DayInformation from \"./DayInformation\";\nimport { plantData } from \"../../providers/plantData\";\n\ninterface ModalContentProps {\n  variants: ModalSelection;\n}\n\nconst ModalContent = ({ variants }: ModalContentProps) => {\n  let selected = plantData.filter((item) => item.id === variants.id);\n  let selectedPlant = selected[0];\n  let hasSoak: boolean = selectedPlant.cycleData.soak.length > 0;\n  let hasGermination: boolean = selectedPlant.cycleData.germination.length > 0;\n\n  if (variants.type === \"soak\") {\n    return (\n      <>\n        <DayInformation date={variants.date} />\n        <GeneralInformation plantObject={selectedPlant} />\n        <SoakInformation plantObject={selectedPlant} />\n      </>\n    );\n  }\n\n  if (variants.type === \"germination\") {\n    if (hasSoak) {\n      return (\n        <>\n          <DayInformation date={variants.date} />\n          <GermInformation plantObject={selectedPlant} />\n        </>\n      );\n    } else\n      return (\n        <>\n          <DayInformation date={variants.date} />\n          <GeneralInformation plantObject={selectedPlant} />\n          <SoakInformation plantObject={selectedPlant} />\n          <GermInformation plantObject={selectedPlant} />\n        </>\n      );\n  } else {\n    if (hasSoak && !hasGermination) {\n      return (\n        <>\n          <DayInformation date={variants.date} />\n          <GermInformation plantObject={selectedPlant} />\n          <GrowInformation plantObject={selectedPlant} />\n        </>\n      );\n    }\n    if (!hasSoak && hasGermination) {\n      return (\n        <>\n          <DayInformation date={variants.date} />\n          <SoakInformation plantObject={selectedPlant} />\n          <GrowInformation plantObject={selectedPlant} />\n        </>\n      );\n    }\n    if (!hasSoak && !hasGermination) {\n      return (\n        <>\n          <DayInformation date={variants.date} />\n          <GeneralInformation plantObject={selectedPlant} />\n          <SoakInformation plantObject={selectedPlant} />\n          <GermInformation plantObject={selectedPlant} />\n          <GrowInformation plantObject={selectedPlant} />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <GrowInformation plantObject={selectedPlant} />\n        </>\n      );\n    }\n  }\n};\n\nexport default ModalContent;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport Modal from \"react-modal\";\nimport moment from \"moment\";\nimport { useAppContext } from \"../../providers/context\";\nimport { plantData, options } from \"../../providers/plantData\";\nimport PlantCycle from \"../PlantCycle\";\nimport ModalContent from \"../ModalContent\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst Timeline = () => {\n  const { state, dispatch, ACTIONS }: any = useAppContext();\n\n  const closeModal = () => {\n    dispatch({\n      type: ACTIONS.SET_MODAL_STATE,\n      payload: false,\n    });\n  };\n\n  const onPlantChangeHandler = (selection: any) => {\n    dispatch({\n      type: ACTIONS.UPDATE_SELECTION,\n      payload: selection?.map((item: any) => item.value),\n    });\n  };\n\n  const onDateChangeHandler = (e: any) => {\n    dispatch({\n      type: ACTIONS.SET_DATE,\n      payload: e.target.value,\n    });\n  };\n\n  const onClearHandler = () => {\n    dispatch({\n      type: ACTIONS.CLEAR_SELECTION,\n      payload: [],\n    });\n  };\n\n  const onSelectAllHandler = () => {\n    dispatch({\n      type: ACTIONS.ALL_SELECTION,\n      payload: plantData.map((item) => item.id),\n    });\n  };\n\n  const calculateDates = (date: string, days: number) => {\n    console.log(date);\n    console.log(days);\n    let d = moment(new Date(date));\n    let dm = d.subtract(days, \"days\");\n    return dm.format(\"dd DD. MM.\");\n  };\n\n  return (\n    <div className=\"timelineContainer\">\n      <div className=\"controls\">\n        <label htmlFor=\"harverstDate\">Harvest Date:</label>\n        <input\n          id=\"harvestDate\"\n          type=\"date\"\n          value={state.harvestDate}\n          onChange={(e) => {\n            onDateChangeHandler(e);\n          }}\n        />\n        <div className=\"selectWrapper\">\n          <Select\n            onChange={(selection: any) => onPlantChangeHandler(selection)}\n            isMulti\n            options={options}\n          />\n        </div>\n        <button\n          onClick={() => {\n            onClearHandler();\n          }}\n        >\n          Clear\n        </button>\n        <button\n          onClick={() => {\n            onSelectAllHandler();\n          }}\n        >\n          Sellect all\n        </button>\n      </div>\n      <div className=\"visualWrapper\">\n        <div className=\"dayNumbers\">\n          {new Array(20).fill(0).map((item: number, index: number) => {\n            return (\n              <div key={index} className={(index + 1) % 7 === 0 ? \"seven\" : \"\"}>\n                {/* <div>{20 - index}</div> */}\n                <div>{calculateDates(state.harvestDate, index)}</div>\n              </div>\n            );\n          })}\n        </div>\n        <div>\n          {state?.selection?.map((item: string, index: number) => {\n            return (\n              <PlantCycle\n                key={index}\n                id={item}\n                harvestDate={state.harvestDate}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <Modal\n        ariaHideApp={false}\n        isOpen={state.modalState}\n        contentLabel=\"Example Modal\"\n      >\n        <ClearIcon className=\"clearIcon\" onClick={closeModal} />\n        <div className=\"modalContent\">\n          <ModalContent variants={state.modalSelection} />\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import React from \"react\";\nimport Timeline from \"./components/Timeline\";\nimport { ContextProvider } from \"./providers/context\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <ContextProvider>\n      <div className=\"App\">\n        <Timeline />\n      </div>\n    </ContextProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}